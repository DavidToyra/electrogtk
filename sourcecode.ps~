%!PS-Adobe-3.0
%%Title: README.txt, Makefile, calculate_box.h, coupling_box.h, electrogui.h, libcomponent.h, libpower.h, libresistance.h, voltage_box.h, calculate_box.c
%%For: David
%%Creator: a2ps version 4.14
%%CreationDate: Thu May 16 21:04:24 2019
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 14
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#Makefile for electrotestgtk) c n
(all) L
(:) p 8 T (electrotestgtk) N
() N
(electrotestgtk) L
(:) p 16 T (electrogui.o coupling_box.o calculate_box.o voltage_box.o) N
() S 8 T (gcc electrogui.o calculate_box.o voltage_box.o coupling_box.o -o electro) N
(testgtk -L/usr/local/lib -lresistance -lpower -lcomponent -Wl,-R/usr/local/lib -) N
(lm `pkg-config --cflags --libs gtk+-2.0`) N
() N
(electrogui.o) L
(:) p 16 T (electrogui.c electrogui.h) N
() S 8 T (gcc -c electrogui.c -o electrogui.o `pkg-config --cflags --libs gtk+-2.0) N
(`) N
() N
(coupling_box.o) L
(:) p 16 T (coupling_box.c coupling_box.h) N
() S 8 T (gcc -c coupling_box.c -o coupling_box.o `pkg-config --cflags --libs gtk+) N
(-2.0`) N
() N
(voltage_box.o) L
(:) p 16 T (voltage_box.c voltage_box.h) N
() S 8 T (gcc -c voltage_box.c -o voltage_box.o `pkg-config --cflags --libs gtk+-2) N
(.0`) N
() N
(calculate_box.o) L
(:) p 24 T (calculate_box.c calculate_box.h) N
() S 8 T (gcc -c calculate_box.c -o calculate_box.o `pkg-config --cflags --libs gt) N
(k+-2.0`) N
(Makefile) (Page 1/1) (maj 16, 19 20:38) title
border
grestore
(Printed by David) rhead
(Makefile) (1/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * @file calculate_box.h) N
( * @author David T\303\266yr\303\244) N
( * @date 26 april 2019) N
( * @brief A gtk box containing the calculate functionality of electrotest.) N
( */) N
() p n
(#ifndef) K
( CALC_BOX_H_) p n
(#define) K
( CALC_BOX_H_) p n
(#include) K
( <gtk/gtk.h>) p n
(#include) K
( ") p
(electrogui.h) str
(") p n
(#include) K
( <stdlib.h>) p n
(#include) K
( <string.h>) p n
() N
(/**) c n
( * @brief Constructor of the lower GUI part.) N
( * ) N
( * Contains the calculate button and the output of power and resistance.) N
( *) N
( * @param gui A struct that contains pointers to all gui parts and to the) N
( * array which contains the resistor values.) N
( * @return GtkWidget* pointer to the widget with the calculate box.) N
( *) N
( */) N
(extern) K
( GtkWidget* calc_result_box_new\() p
(struct) k
( gui_comp* gui\);) p n
(#endif) K n
(calculate_box.h) (Page 1/1) (maj 16, 19 18:11) title
border
grestore
(Printed by David) rhead
(calculate_box.h) (2/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * @file coupling_box.h) N
( * @author David T\303\266yr\303\244) N
( * @date 26 april 2019) N
( * @brief A gtk box containing the coupling options of serial or parallel.) N
( */) N
(#ifndef) K
( COUPLING_BOX_H_) p n
(#define) K
( COUPLING_BOX_H_) p n
(#include) K
( <gtk/gtk.h>) p n
(#include) K
( ") p
(helper_functions.h) str
(") p n
() N
() N
(/**) c n
( * @brief Constructor for the Resistor Coupling Gui part) N
( *) N
( * The coupling takes an input of either s or p, it is undefined) N
( * for something else.) N
( *) N
( * @return GtkWidget* pointer to the new created Gui part.) N
( *) N
( */) N
(extern) K
( GtkWidget* coupling_box_new\() p
(void) k
(\);) p n
(#endif) K n
() p n
(coupling_box.h) (Page 1/1) (maj 16, 19 18:11) title
border
grestore
(Printed by David) rhead
(coupling_box.h) (3/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * @file electrogui.h) N
( * @author David T\303\266yr\303\244) N
( * @date 26 april 2019) N
( * @brief headerfile for main program that assembles and runs the GUI.) N
( */) N
(#ifndef) K
( ELECTROGUI_H_) p n
(#define) K
( ELECTROGUI_H_) p n
(#include) K
( <gtk/gtk.h>) p n
(#include) K
( ") p
(coupling_box.h) str
(") p n
(#include) K
( ") p
(voltage_box.h) str
(") p n
(#include) K
( ") p
(libresistance.h) str
(") p n
(#include) K
( ") p
(libpower.h) str
(") p n
(#include) K
( ") p
(libcomponent.h) str
(") p n
() N
(/**) c n
( * @brief Struct with pointers to all gui and data parts) N
( *) N
( * The struct contains pointers to the three GtkWidget gui) N
( * parts and the float array that contains the current resistor) N
( * values.) N
( */) N
(struct) k
( gui_comp {) p n
() S 8 T (GtkWidget* voltage_box;) N
() S 8 T (GtkWidget* coupling_box;) N
() S 8 T (GtkWidget* resistor_box;) N
() S 8 T (GtkWidget* calc_result_box;) N
() S 8 T () S
(float) k
(* resistor_values;) p n
(};) N
() N
(/**) c n
( * @brief Searches for a gtklabel by a name from a parent widget.) N
( * ) N
( * Recursively traverses the list of child widgets from a parent) N
( * until it has found the widget by a name that is searched.) N
( * ) N
( * @param parent widget to start searching from.) N
( * @param name string that represents name of the widget being searched) N
( * @return gtkwidget matching the name) N
( */) N
(GtkWidget* find_label\(GtkWidget* parent, ) p
(const) K
( gchar* name\);) p n
() N
(/**) c n
( * @brief Constructor for the three resistor fields GUI.) N
( *) N
( * This GUI part contains three resistor input field.) N
( *) N
( * @return GtkWidget Contains the constructed GUI part.) N
( */) N
(GtkWidget* resistor_box_new\() p
(void) k
(\);) p n
() N
(/**) c n
( * @brief Updates the value_array with values from the GUI) N
( *) N
( * The Function assumes a gfloat array of size 3.) N
( *) N
( * @param resistor_box The GUI part to access the user input.) N
( * @value_array Float array of size 3 that contains the resistor values) N
( */) N
(gfloat* update_resistor_values\(GtkWidget* resistor_box, gfloat *value_array\);) p n
(#endif) K n
() p n
(electrogui.h) (Page 1/1) (maj 16, 19 20:54) title
border
grestore
(Printed by David) rhead
(electrogui.h) (4/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( _LIBCOMPONENT_H) p n
(#define) K
( _LIBCOMPONENT_H) p n
(    ) S
(int) k
( e_resistance\() p
(float) k
( orig_resistance, ) p
(float) k
( *res_array\);) p n
(#endif) K n
(libcomponent.h) (Page 1/1) (feb 01, 19 6:21) title
border
grestore
(Printed by David) rhead
(libcomponent.h) (5/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( _LIBPOWER_H_) p n
(#define) K
( _LIBPOWER_H_) p n
() N
(float) k
( calc_power_r\() p
(float) k
( voltage, ) p
(float) k
( resistance\);) p n
(float) k
( calc_power_i\() p
(float) k
( voltage, ) p
(float) k
( current\);) p n
() N
(#endif) K n
(libpower.h) (Page 1/1) (feb 01, 19 6:21) title
border
grestore
(Printed by David) rhead
(libpower.h) (6/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <stdio.h>) p n
(#include) K
( <stdlib.h>) p n
(float) k
( calc_resistance\() p
(int) k
( count, ) p
(char) k
( conn, ) p
(float) k
( *array\);) p n
(libresistance.h) (Page 1/1) (feb 01, 19 6:21) title
border
grestore
(Printed by David) rhead
(libresistance.h) (7/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( VOLTAGE_BOX_H_) p n
(#define) K
( VOLTAGE_BOX_H_) p n
(#include) K
( <gtk/gtk.h>) p n
(#include) K
( ") p
(helper_functions.h) str
(") p n
() N
(/**) c n
( * @brief Constructor for voltage gtk view) N
( *) N
( * Constructs the voltage_box GUI element which contains) N
( * the entry field for setting the voltage.) N
( *) N
( * @return GtkWidget ) N
( */) N
(extern) K
( GtkWidget* voltage_box_new\() p
(void) k
(\);) p n
() N
(#endif) K n
(voltage_box.h) (Page 1/1) (maj 16, 19 18:11) title
border
grestore
(Printed by David) rhead
(voltage_box.h) (8/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * @file calculate_box.c) N
( * @author David T\303\266yr\303\244) N
( * @date 26 april 2019) N
( * @brief A gtk box containing the calculate functionality of electrotest.) N
( */) N
( ) p n
(#include) K
( <gtk/gtk.h>) p n
(#include) K
( ") p
(calculate_box.h) str
(") p n
(#include) K
( ") p
(voltage_box.h) str
(") p n
(#include) K
( ") p
(coupling_box.h) str
(") p n
(#include) K
( ") p
(helper_functions.h) str
(") p n
(#include) K
( ") p
(electrogui.h) str
(") p n
() N
() N
(GtkWidget* result_power;) N
(GtkWidget* result_resistance;) N
() N
(/**) c n
( * @brief on click listener for the calculate button) N
( * calculates resistance and power with the library functions.) N
( *) N
( * @param button calculate button) N
( * @param gui A struct that contains pointers to all gui parts and to the) N
( * array which contains the resistor values.) N
( *) N
( */) N
(void) k
( button_clicked \(GtkWidget *button, ) p
(struct) k
( gui_comp* gui\) {) p n
() N
() S 8 T () S
(//Get data from voltage and coupling boxes) c n
() p 8 T (update_resistor_values\(\(*gui\).resistor_box, \(*gui\).resistor_values\);) N
() S 8 T () S
(float) k
( voltage = atof\(gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*gui\).volt) p n
(age_box, ") S
(voltage) str
("\)\)\)\);) p n
() S 8 T () S
(char) k
( coupling;) p n
() S 8 T () S
(if) K
(\(strcmp\(gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*gui\).coupling_box, ") p
() str n
(coupling) S
("\)\)\), ") p
(S) str
("\) == 0) p n
() S 8 T ( || strcmp\(gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*gui\).coupling_box, ) N
(") S
(coupling) str
("\)\)\), ") p
(s) str
("\) == 0\)) p n
() S 8 T ({) N
() S 8 T () S 16 T (coupling = ') S
(S) str
(';) p n
() S 8 T () S 16 T (printf\(") S
(coupling = %s\\n) str
(", gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*) p n
(gui\).coupling_box, ") S
(coupling) str
("\)\)\)\);) p n
() S 8 T (} ) N
() S 8 T () S
(else) K
( ) p
(if) K
( \(strcmp\(gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*gui\).coupling_) p n
(box, ") S
(coupling) str
("\)\)\) , ") p
(P) str
("\)) p n
() S 8 T ( || strcmp\(gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*gui\).coupling_box, ) N
(") S
(coupling) str
("\)\)\) , ") p
(p) str
("\)\)) p n
() S 8 T ({) N
() S 8 T () S 16 T (coupling = ') S
(P) str
(';) p n
() S 8 T () S 16 T (printf\(") S
(coupling = %s\\n) str
(", gtk_entry_get_text\(GTK_ENTRY\(find_label\(\(*) p n
(gui\).coupling_box, ") S
(coupling) str
("\)\)\)\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(//Calculate resistance and power) c n
() p 8 T () S
(float) k
( resistance = calc_resistance\(3, coupling, \(*gui\).resistor_values\);) p n
() S 8 T () S
(float) k
( power =  calc_power_r\(voltage, resistance\);) p n
() N
() S 8 T () S
(//Convert result to strings) c n
() p 8 T () S
(char) k
( res_resistance[10];) p n
() S 8 T (sprintf\(res_resistance, ") S
(%.2f) str
(",resistance\);) p n
() N
() S 8 T () S
(char) k
( res_power[10];) p n
(calculate_box.c) (Page 1/3) (maj 16, 19 19:07) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (sprintf\(res_power, ") S
(%.2f) str
(",power\);) p n
() N
() S 8 T () S
(//Publish results) c n
() p 8 T (gtk_entry_set_text\(GTK_ENTRY\(result_resistance\), res_resistance\);) N
() S 8 T (gtk_entry_set_editable\(GTK_ENTRY\(result_resistance\), FALSE\);) N
() S 8 T (gtk_entry_set_text\(GTK_ENTRY\(result_power\), res_power\);) N
() S 8 T (gtk_entry_set_editable\(GTK_ENTRY\(result_power\), FALSE\);) N
() N
(}) N
() N
() N
() N
(/**) c n
( * @brief Constructor of the lower GUI part.) N
( * ) N
( * Contains the calculate button and the output of power and resistance.) N
( *) N
( * @param gui A struct that contains pointers to all gui parts and to the) N
( * array which contains the resistor values.) N
( * @return GtkWidget* pointer to the widget with the calculate box.) N
( *) N
( */) N
(GtkWidget* calc_result_box_new\() p
(struct) k
( gui_comp* gui\){) p n
() N
() S 8 T (GtkWidget* lower_vbox;) N
() S 8 T (GtkWidget* valign;) N
() S 8 T (GtkWidget* halign;) N
() S 8 T (GtkWidget* hbox;) N
() S 8 T (GtkWidget* button;) N
() S 8 T (GtkWidget* result_resistance_box;) N
() S 8 T (GtkWidget* result_power_box;) N
() N
() S 8 T () S
(//Make main box for the calculate function) c n
() p 8 T (lower_vbox = gtk_vbox_new\(FALSE, 5\);) N
() S 8 T (valign = gtk_alignment_new\(0, 1, 0, 0\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(lower_vbox\), valign\);) N
() S 8 T (hbox = gtk_hbox_new\(TRUE, 3\);) N
() N
() S 8 T () S
(//Make button and add callback funtion to it) c n
() p 8 T (button = gtk_button_new_with_label\(") S
(Calculate) str
("\);) p n
() S 8 T (gtk_widget_set_size_request\(button, 70, 30\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), button\);) N
() N
() N
() S 8 T (g_signal_connect\(GTK_OBJECT\(button\), ") S
(clicked) str
(",) p n
() S 8 T () S 16 T (   GTK_SIGNAL_FUNC\(button_clicked\), \(gpointer *\) gui\);) N
() N
() S 8 T () S
(//Make replacement resistance box) c n
() p 8 T (result_resistance_box = gtk_vbox_new\(FALSE, 2\);) N
() S 8 T (result_resistance = gtk_entry_new\(\);) N
() S 8 T (gtk_entry_set_editable\(GTK_ENTRY\(result_resistance\), FALSE\);) N
() S 8 T (GtkWidget *label = gtk_label_new\(") S
(Replacement Resistance \(Ohm\)) str
("\);) p n
(  ) S 8 T (GtkWidget *vbox = gtk_vbox_new\(TRUE, 2\);) N
() N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(vbox\), label\);) N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(vbox\), result_resistance\);) N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(result_resistance_box\), vbox\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), result_resistance_box\);) N
() N
() S 8 T () S
(//Make power box) c n
() p 8 T (result_power_box = gtk_vbox_new\(FALSE, 2\);) N
() S 8 T (result_power = gtk_entry_new\(\);) N
(calculate_box.c) (Page 2/3) (maj 16, 19 19:07) title
border
grestore
(Printed by David) rhead
(calculate_box.c) (9/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (gtk_entry_set_editable\(GTK_ENTRY\(result_power\), FALSE\);) N
() S 8 T (GtkWidget *power_label = gtk_label_new\(") S
(Power \(W\)) str
("\);) p n
() S 8 T (GtkWidget *powervbox = gtk_vbox_new\(TRUE, 2\);) N
() S 8 T () N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(vbox\), power_label\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(vbox\), result_power\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(result_power_box\), powervbox\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), result_power_box\);) N
() N
() S 8 T (halign = gtk_alignment_new\(0, 0, 0, 0\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(halign\), hbox\);) N
() N
() S 8 T (gtk_box_pack_start\(GTK_BOX\(lower_vbox\), halign, FALSE, FALSE, 0\);) N
() N
() S 8 T () S
(return) K
( lower_vbox;) p n
() N
(}) N
(calculate_box.c) (Page 3/3) (maj 16, 19 19:07) title
border
grestore
(Printed by David) rhead
(calculate_box.c) (10/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * @file coupling_box.c) N
( * @author David T\303\266yr\303\244) N
( * @date 26 april 2019) N
( * @brief A gtk box containing the coupling options of serial or parallel.) N
( */) N
(#include) K
( <gtk/gtk.h>) p n
(#include) K
( ") p
(coupling_box.h) str
(") p n
() N
() N
() N
(/**) c n
( * @brief Constructor for the Resistor Coupling Gui part) N
( *) N
( * The coupling takes an input of either s or p, it is undefined) N
( * for something else.) N
( *) N
( * @return GtkWidget* pointer to the new created Gui part.) N
( *) N
( */) N
(GtkWidget* coupling_box_new\() p
(void) k
(\)) p n
({) N
() S 8 T (GtkWidget *coupling_box;) N
() S 8 T (GtkWidget* entry;) N
() S 8 T (entry = gtk_entry_new\(\);) N
() S 8 T (gtk_widget_set_name\(entry, ") S
(coupling) str
("\);) p n
() S 8 T () N
() S 8 T (coupling_box = gtk_vbox_new\(FALSE, 2\);) N
() S 8 T (GtkWidget *label = gtk_label_new\(") S
(Coupling S or P: ) str
("\);) p n
(  ) S 8 T (GtkWidget *hbox = gtk_hbox_new\(TRUE,2\);) N
() N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), label\);) N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), entry\);) N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(coupling_box\), hbox\);) N
() S 8 T () N
() N
() S 8 T () S
(return) K
( coupling_box;) p n
(}) N
() N
(coupling_box.c) (Page 1/1) (maj 16, 19 18:11) title
border
grestore
(Printed by David) rhead
(coupling_box.c) (11/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * @file electrogui.c) N
( * @author David T\303\266yr\303\244) N
( * @date 26 april 2019) N
( * @brief main program that assembles and runs the GUI.) N
( */) N
(#include) K
( ") p
(electrogui.h) str
(") p n
(#include) K
( <stdio.h>) p n
(#include) K
( <string.h>) p n
(#include) K
( ") p
(helper_functions.h) str
(") p n
(#include) K
( ") p
(calculate_box.h) str
(") p n
(#include) K
( <stdlib.h>) p n
(#include) K
( ") p
(coupling_box.h) str
(") p n
(#include) K
( ") p
(voltage_box.h) str
(") p n
() N
() N
() N
(char) k
(* ) p
(const) K
( resistor_names[] = { ") p
(res1) str
(", ") p
(res2) str
(", ") p
(res3) str
(" };) p n
(char) k
(* ) p
(const) K
( resistor_labels[] = {") p
(1:) str
(", ") p
(2:) str
(", ") p
(3:) str
("};) p n
() N
(/**) c n
( * @brief Searches for a gtklabel by a name from a parent widget.) N
( * ) N
( * Recursively traverses the list of child widgets from a parent) N
( * until it has found the widget by a name that is searched.) N
( * ) N
( * @param parent widget to start searching from.) N
( * @param name string that represents name of the widget being searched) N
( * @return gtkwidget matching the name) N
( */) N
(GtkWidget* find_label\(GtkWidget* parent, ) p
(const) K
( gchar* name\)) p n
({) N
() S 8 T () S
(//Check if name matches) c n
() p 8 T () S
(if) K
( \(g_ascii_strcasecmp\(gtk_widget_get_name\(\(GtkWidget*\)parent\), \(gchar*\)) p n
(name\) == 0\)) N
() S 8 T ({) N
() S 8 T () S 16 T () S
(return) K
( parent;) p n
() S 8 T (}) N
() N
() N
(    ) S
(if) K
( \(GTK_IS_BIN\(parent\)\) ) p n
() S 8 T ({) N
(    ) S 8 T (GtkWidget *child = gtk_bin_get_child\(GTK_BIN\(parent\)\);) N
(        ) S
(return) K
( find_label\(child, name\);) p n
(    }) N
() N
() N
() S 8 T () S
(//Get list of children and call this function again.) c n
(    ) p
(if) K
( \(GTK_IS_CONTAINER\(parent\)\) ) p n
() S 8 T ({) N
(    ) S 8 T (GList *children = gtk_container_get_children\(GTK_CONTAINER\(parent\)\);) N
(    ) S 8 T () S
(do) K
( {) p n
(    ) S 8 T () S 16 T (GtkWidget* widget = find_label\(children->data,name\);) N
(    ) S 8 T () S 16 T () S
(if) K
( \(widget != ) p
(NULL) K
(\) {) p n
(    ) S 8 T () S 16 T () S 24 T () S
(return) K
( widget;) p n
(    ) S 8 T () S 16 T (}) N
(    ) S 8 T (} ) S
(while) K
( \(\(children = g_list_next\(children\)\) != ) p
(NULL) K
(\);) p n
(    }) N
(    ) S
(return) K
( ) p
(NULL) K
(;) p n
(}) N
() N
(/**) c n
(electrogui.c) (Page 1/3) (maj 16, 19 18:11) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
( * @brief Constructor for the three resistor fields GUI.) c n
( *) N
( * This GUI part contains three resistor input field.) N
( *) N
( * @return GtkWidget Contains the constructed GUI part.) N
( */) N
(GtkWidget* resistor_box_new\() p
(void) k
(\){) p n
() N
() S 8 T (GtkWidget* upperrightvbox;) N
() S 8 T (GtkWidget* resistor_frame;) N
() N
() S 8 T (upperrightvbox = gtk_vbox_new\(FALSE, 5\);) N
() N
() N
() S 8 T () S
(for) K
(\() p
(int) k
( i = 0; i < 3; i++\)) p n
() S 8 T ({) N
() S 8 T () S 16 T (GtkWidget* entry = gtk_entry_new\(\);) N
() S 8 T () S 16 T (gtk_widget_set_name\(entry, resistor_names[i]\);) N
() S 8 T () S 16 T (GtkWidget *label = gtk_label_new\(resistor_labels[i]\);) N
(  ) S 8 T () S 16 T (GtkWidget *hbox = gtk_hbox_new\(TRUE,2\);) N
() N
(  ) S 8 T () S 16 T (gtk_container_add\(GTK_CONTAINER\(hbox\), label\);) N
(  ) S 8 T () S 16 T (gtk_container_add\(GTK_CONTAINER\(hbox\), entry\);) N
(  ) S 8 T () S 16 T (gtk_container_add\(GTK_CONTAINER\(upperrightvbox\), hbox\);) N
() S 8 T (}) N
() N
() S 8 T (resistor_frame = gtk_frame_new\(") S
(Resistors \(Ohm\)) str
("\);) p n
() S 8 T (gtk_container_add\(GTK_CONTAINER\(resistor_frame\), upperrightvbox\);) N
() N
() S 8 T () S
(return) K
( resistor_frame;) p n
(}) N
() N
(/**) c n
( * @brief Updates the value_array with values from the GUI) N
( *) N
( * The Function assumes a gfloat array of size 3.) N
( *) N
( * @param resistor_box The GUI part to access the user input.) N
( * @value_array Float array of size 3 that contains the resistor values) N
( */) N
(gfloat* update_resistor_values\(GtkWidget* resistor_box, gfloat *value_array\){) p n
() N
() S 8 T () S
(for) K
(\() p
(int) k
( i = 0; i < 3; i++\){) p n
() S 8 T () S 16 T (value_array[i] = \(gfloat\) atof\(gtk_entry_get_text\() N
() S 8 T () S 16 T (GTK_ENTRY\( \(GtkWidget *\) find_label\(resistor_box, resistor_names) N
([i]\)\)\)\);) N
() S 8 T (}) N
() N
() S 8 T () S
(return) K
( value_array;) p n
(}) N
() N
(/**) c n
( * @brief closeApp callback function) N
( *) N
( * Function to close main GTK application window.) N
( *) N
( * @param window, pointer to the main window widget) N
( */) N
(void) k
( closeApp \( GtkWidget *window\) {) p n
(  gtk_main_quit\(\);) N
(}) N
() N
(electrogui.c) (Page 2/3) (maj 16, 19 18:11) title
border
grestore
(Printed by David) rhead
(electrogui.c) (12/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(/**) c n
( * @brief main function for the electrotest gui.) N
( *) N
( * Uses GTK+ v2.0 library for the graphical interface. Creates the meain window) N
( * and then the gtk widgets one by one and adds them to the main window.) N
( * ) N
( */) N
(gint main \(gint argc, gchar *argv[]\) {) p n
() N
() S 8 T (GtkWidget *window;) N
() S 8 T (GtkWidget *global_vbox;) N
() S 8 T (GtkWidget *upper_left_vbox;) N
() S 8 T (GtkWidget *upper_hbox;) N
() N
() S 8 T () S
(struct) k
( gui_comp gui;) p n
() S 8 T () S
(struct) k
( gui_comp* gui_pt = &gui;) p n
() S 8 T (gfloat resistor_values[3] = {1, 1, 1};) N
() N
() S 8 T (gtk_init\(&argc, &argv\);) N
() N
() S 8 T () S
(//Create main frame) c n
() p 8 T (window = gtk_window_new\(GTK_WINDOW_TOPLEVEL\);) N
() S 8 T (gtk_window_set_title\(GTK_WINDOW\(window\), ") S
(Electrotest) str
("\);) p n
() S 8 T (gtk_window_set_position\(GTK_WINDOW\(window\), GTK_WIN_POS_CENTER\);) N
() S 8 T (gtk_window_set_default_size\(GTK_WINDOW\(window\),400, 250\);) N
() S 8 T (gtk_container_set_border_width\(GTK_CONTAINER\(window\), 10\);) N
() N
() S 8 T (global_vbox = gtk_vbox_new\(FALSE, 5\);) N
() N
() S 8 T () S
(//Create boxes for the data I/O) c n
() p 8 T (gui.voltage_box = voltage_box_new\(\);) N
() S 8 T (gui.coupling_box = coupling_box_new\(\);) N
() S 8 T (gui.resistor_box = resistor_box_new\(\);) N
() S 8 T (gui.calc_result_box = calc_result_box_new\(gui_pt\);) N
() S 8 T (gui.resistor_values = resistor_values;) N
() N
() S 8 T () S
(//Add coupling and voltage fields) c n
() p 8 T (upper_left_vbox = gtk_vbox_new\(FALSE, 5\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(upper_left_vbox\), gui.voltage_box\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(upper_left_vbox\), gui.coupling_box\);) N
() N
() S 8 T () N
() S 8 T (upper_hbox = gtk_hbox_new\(FALSE, 5\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(upper_hbox\),upper_left_vbox\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(upper_hbox\),gui.resistor_box\);) N
() S 8 T (gtk_container_add\(GTK_CONTAINER\(global_vbox\), upper_hbox\);) N
() N
() N
(    gtk_container_add\(GTK_CONTAINER\(global_vbox\), gui.calc_result_box\);) N
(    gtk_container_add\(GTK_CONTAINER\(window\), global_vbox\);) N
() N
(    g_signal_connect\(G_OBJECT\(window\), ") S
(destroy) str
(",) p n
(          G_CALLBACK\(gtk_main_quit\), G_OBJECT\(window\)\);) N
() N
(    gtk_widget_show_all\(window\);) N
() N
(    gtk_main\(\);) N
() N
(    ) S
(return) K
( 0;) p n
() N
(}) N
(electrogui.c) (Page 3/3) (maj 16, 19 18:11) title
border
grestore
(Printed by David) rhead
(electrogui.c) (13/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(voltage_box.h) str
(") p n
() N
(/**) c n
( * @brief Constructor for voltage gtk view) N
( *) N
( * Constructs the voltage_box GUI element which contains) N
( * the entry field for setting the voltage.) N
( *) N
( * @return GtkWidget ) N
( */) N
(GtkWidget *voltage_box_new\() p
(void) k
(\)) p n
({) N
() S 8 T (GtkWidget* voltageInfo = gtk_entry_new\(\);) N
() S 8 T (gtk_widget_set_name\(voltageInfo, ") S
(voltage) str
("\);) p n
() S 8 T () N
() S 8 T (GtkWidget* voltage_box = gtk_vbox_new\(FALSE, 2\);) N
() S 8 T (GtkWidget *label = gtk_label_new\(") S
(Voltage \(V\): ) str
("\);) p n
(  ) S 8 T (GtkWidget *hbox = gtk_hbox_new\(TRUE,2\);) N
() N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), label\);) N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(hbox\), voltageInfo\);) N
(  ) S 8 T (gtk_container_add\(GTK_CONTAINER\(voltage_box\), hbox\);) N
() S 8 T () N
() S 8 T () S
(return) K
( voltage_box;) p n
(}) N
() N
() N
() N
(voltage_box.c) (Page 1/1) (apr 23, 19 20:47) title
border
grestore
(Printed by David) rhead
(voltage_box.c) (14/14) (torsdag maj 16, 2019) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
